# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  check-package-version:
    docker:
      - image: cimg/openjdk:17.0.3
    steps:
      - checkout
      - run:
          name: Check version has been bumped
          command: bash ./scripts/check-package-version.sh $CIRCLE_PROJECT_REPONAME
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
      - attach_workspace:
          at: ~/project/

  validate:
    docker:
      - image: cimg/openjdk:17.0.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          command: |
            mvn clean validate compile
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  pack:
    docker:
      - image: cimg/openjdk:17.0.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          command: |
            mvn package
      - persist_to_workspace:
          root: ~/project
          paths:
            - .


  build:
    docker:
      - image: cimg/openjdk:17.0.3
    steps:
      - checkout
      - run:
          command: |
            mvn clean install

  deploy:
    docker:
      - image: cimg/openjdk:17.0.3
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Publish package
          command: |
            mvn -s .circleci/settings.xml deploy
            rm -f ~/version.txt

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - validate
      - check-package-version:
          filters:
            branches:
              ignore:
                - main
      - pack:
          requires:
            - validate
            - check-package-version
      - build:
          requires:
            - pack
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: /^(main|verify)$/
